Target: http://127.0.0.1:8000/
Date: 26-07-2021 11:59

findings: 
Possible SQL injection (Blind): http://127.0.0.1:8000/sqlinjection.html?sql='; set @test = 'ksdjkfl'; select @test; #; Evidence: The Input 'ksdjkfl' is found in the response without it´s injection string
Possible SQL injection (Blind): http://127.0.0.1:8000/sqlinjection.html?sql='+or+1%3D1%23'; Evidence: The Input is not found in the response and check with negative '1=2' input differs
Possible SQL injection (Error): http://127.0.0.1:8000/sqlinjection.html?sql='+or+1%3D1%23'; Evidence: The words SQL and error are in the answer
Possible SQL injection (Blind): http://127.0.0.1:8000/sqlinjection.html?sql="+or+1%3D1%23"; Evidence: The Input is not found in the response and check with negative '1=2' input differs
Possible SQL injection (Blind): http://127.0.0.1:8000/sqlinjection.html?sql='+or+1%3D1--'; Evidence: The Input is not found in the response and check with negative '1=2' input differs
Possible SQL injection (Error): http://127.0.0.1:8000/sqlinjection.html?sql='+or+1%3D1--'; Evidence: The words SQL and error are in the answer
Possible SQL injection (Blind): http://127.0.0.1:8000/sqlinjection.html?sql="+or+1%3D1--"; Evidence: The Input is not found in the response and check with negative '1=2' input differs
Possible XSS (Permanent): http://127.0.0.1:8000/sqlinjection.html?sql_insert=<img src='x' onerror='alert(1)'>; Evidence: <img src='x' onerror='alert(1)'> found in response
Possible XSS (Permanent): http://127.0.0.1:8000/sqlinjection.html?sql_insert=<script> alert(1) </script>; Evidence: <script> alert(1) </script> found in response
Possible XSS (Permanent): http://127.0.0.1:8000/sqlinjection.html?sql=<script> alert(1) </script>; Evidence: <script> alert(1) </script> found in response


Details: 
Possible SQL injection (Blind): http://127.0.0.1:8000/sqlinjection.html?sql='; set @test = 'ksdjkfl'; select @test; #; Evidence: The Input 'ksdjkfl' is found in the response without it´s injection string
-----------------------------------
request answer:
<html><head>
        <title>SQL-Injection</title>
    </head>
    <body>
        <h1> SQL-Injection </h1>
        <p id="Welcometext">An SQL-Injection weakness is present on this site</p>
        
        <form>
            <label for="sql_insert">SQL data input:
                <input id="sql_insert" name="sql_insert">
            </label>
            <button type="submit" name="submit_insert" value="0">submit</button> <br>
            <label for="out_table_cont">Table content:
                <output id="out_table_cont">.</output>
            </label>
        </form>
        
        <form>
        <!-- Exploit input: '; drop table htmlInput; select * from htmlInput where input = ' -->
            <label for="sql">SQL where query input:
                <input id="sql" name="sql">
            </label>
            <button type="submit" name="submit_where" value="0">submit</button> <br>
            <label for="out">Result:
                <output id="out">[('ksdjkfl',)]</output>
            </label>
        </form>
        
        <p id="Links">
            <a href="http://localhost:8000/index.html">This link leads to the homepage</a><br>
            <a href="http://localhost:8000/xss.html">Here you can try XSS-attacks</a><br>
        </p>
    
</body></html>
-----------------------------------------------------------------------------
Possible SQL injection (Blind): http://127.0.0.1:8000/sqlinjection.html?sql='+or+1%3D1%23'; Evidence: The Input is not found in the response and check with negative '1=2' input differs
-----------------------------------
request answer:
<html><head></head><body>        <h1>Error accessing /sqlinjection.html?sql=%27%2Bor%2B1%253D1%2523%27&amp;submit_where=0</h1>        <p>1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'or+1%3D1%23''' at line 1</p>                </body></html>
 negative Result: 
<html><head></head><body>        <h1>Error accessing /sqlinjection.html?sql=%27%2Bor%2B1%253D2%2523%27&amp;submit_where=0</h1>        <p>1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'or+1%3D2%23''' at line 1</p>                </body></html>
-----------------------------------------------------------------------------
Possible SQL injection (Error): http://127.0.0.1:8000/sqlinjection.html?sql='+or+1%3D1%23'; Evidence: The words SQL and error are in the answer
-----------------------------------
request answer:
<html><head></head><body>        <h1>Error accessing /sqlinjection.html?sql=%27%2Bor%2B1%253D1%2523%27&amp;submit_where=0</h1>        <p>1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'or+1%3D1%23''' at line 1</p>                </body></html>
-----------------------------------------------------------------------------
Possible SQL injection (Blind): http://127.0.0.1:8000/sqlinjection.html?sql="+or+1%3D1%23"; Evidence: The Input is not found in the response and check with negative '1=2' input differs
-----------------------------------
request answer:
<html><head>
        <title>SQL-Injection</title>
    </head>
    <body>
        <h1> SQL-Injection </h1>
        <p id="Welcometext">An SQL-Injection weakness is present on this site</p>
        
        <form>
            <label for="sql_insert">SQL data input:
                <input id="sql_insert" name="sql_insert">
            </label>
            <button type="submit" name="submit_insert" value="0">submit</button> <br>
            <label for="out_table_cont">Table content:
                <output id="out_table_cont">.</output>
            </label>
        </form>
        
        <form>
        <!-- Exploit input: '; drop table htmlInput; select * from htmlInput where input = ' -->
            <label for="sql">SQL where query input:
                <input id="sql" name="sql">
            </label>
            <button type="submit" name="submit_where" value="0">submit</button> <br>
            <label for="out">Result:
                <output id="out">[(27, '"+or+1%3D1%23"'), (39, '"+or+1%3D1%23"'), (51, '"+or+1%3D1%23"'), (63, '"+or+1%3D1%23"')]</output>
            </label>
        </form>
        
        <p id="Links">
            <a href="http://localhost:8000/index.html">This link leads to the homepage</a><br>
            <a href="http://localhost:8000/xss.html">Here you can try XSS-attacks</a><br>
        </p>
    
</body></html>
 negative Result: 
<html><head>
        <title>SQL-Injection</title>
    </head>
    <body>
        <h1> SQL-Injection </h1>
        <p id="Welcometext">An SQL-Injection weakness is present on this site</p>
        
        <form>
            <label for="sql_insert">SQL data input:
                <input id="sql_insert" name="sql_insert">
            </label>
            <button type="submit" name="submit_insert" value="0">submit</button> <br>
            <label for="out_table_cont">Table content:
                <output id="out_table_cont">.</output>
            </label>
        </form>
        
        <form>
        <!-- Exploit input: '; drop table htmlInput; select * from htmlInput where input = ' -->
            <label for="sql">SQL where query input:
                <input id="sql" name="sql">
            </label>
            <button type="submit" name="submit_where" value="0">submit</button> <br>
            <label for="out">Result:
                <output id="out">[]</output>
            </label>
        </form>
        
        <p id="Links">
            <a href="http://localhost:8000/index.html">This link leads to the homepage</a><br>
            <a href="http://localhost:8000/xss.html">Here you can try XSS-attacks</a><br>
        </p>
    
</body></html>
-----------------------------------------------------------------------------
Possible SQL injection (Blind): http://127.0.0.1:8000/sqlinjection.html?sql='+or+1%3D1--'; Evidence: The Input is not found in the response and check with negative '1=2' input differs
-----------------------------------
request answer:
<html><head></head><body>        <h1>Error accessing /sqlinjection.html?sql=%27%2Bor%2B1%253D1--%27&amp;submit_where=0</h1>        <p>1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'or+1%3D1--''' at line 1</p>                </body></html>
 negative Result: 
<html><head></head><body>        <h1>Error accessing /sqlinjection.html?sql=%27%2Bor%2B1%253D2--%27&amp;submit_where=0</h1>        <p>1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'or+1%3D2--''' at line 1</p>                </body></html>
-----------------------------------------------------------------------------
Possible SQL injection (Error): http://127.0.0.1:8000/sqlinjection.html?sql='+or+1%3D1--'; Evidence: The words SQL and error are in the answer
-----------------------------------
request answer:
<html><head></head><body>        <h1>Error accessing /sqlinjection.html?sql=%27%2Bor%2B1%253D1--%27&amp;submit_where=0</h1>        <p>1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'or+1%3D1--''' at line 1</p>                </body></html>
-----------------------------------------------------------------------------
Possible SQL injection (Blind): http://127.0.0.1:8000/sqlinjection.html?sql="+or+1%3D1--"; Evidence: The Input is not found in the response and check with negative '1=2' input differs
-----------------------------------
request answer:
<html><head>
        <title>SQL-Injection</title>
    </head>
    <body>
        <h1> SQL-Injection </h1>
        <p id="Welcometext">An SQL-Injection weakness is present on this site</p>
        
        <form>
            <label for="sql_insert">SQL data input:
                <input id="sql_insert" name="sql_insert">
            </label>
            <button type="submit" name="submit_insert" value="0">submit</button> <br>
            <label for="out_table_cont">Table content:
                <output id="out_table_cont">.</output>
            </label>
        </form>
        
        <form>
        <!-- Exploit input: '; drop table htmlInput; select * from htmlInput where input = ' -->
            <label for="sql">SQL where query input:
                <input id="sql" name="sql">
            </label>
            <button type="submit" name="submit_where" value="0">submit</button> <br>
            <label for="out">Result:
                <output id="out">[(29, '"+or+1%3D1--"'), (41, '"+or+1%3D1--"'), (53, '"+or+1%3D1--"'), (65, '"+or+1%3D1--"')]</output>
            </label>
        </form>
        
        <p id="Links">
            <a href="http://localhost:8000/index.html">This link leads to the homepage</a><br>
            <a href="http://localhost:8000/xss.html">Here you can try XSS-attacks</a><br>
        </p>
    
</body></html>
 negative Result: 
<html><head>
        <title>SQL-Injection</title>
    </head>
    <body>
        <h1> SQL-Injection </h1>
        <p id="Welcometext">An SQL-Injection weakness is present on this site</p>
        
        <form>
            <label for="sql_insert">SQL data input:
                <input id="sql_insert" name="sql_insert">
            </label>
            <button type="submit" name="submit_insert" value="0">submit</button> <br>
            <label for="out_table_cont">Table content:
                <output id="out_table_cont">.</output>
            </label>
        </form>
        
        <form>
        <!-- Exploit input: '; drop table htmlInput; select * from htmlInput where input = ' -->
            <label for="sql">SQL where query input:
                <input id="sql" name="sql">
            </label>
            <button type="submit" name="submit_where" value="0">submit</button> <br>
            <label for="out">Result:
                <output id="out">[]</output>
            </label>
        </form>
        
        <p id="Links">
            <a href="http://localhost:8000/index.html">This link leads to the homepage</a><br>
            <a href="http://localhost:8000/xss.html">Here you can try XSS-attacks</a><br>
        </p>
    
</body></html>
-----------------------------------------------------------------------------
Possible XSS (Permanent): http://127.0.0.1:8000/sqlinjection.html?sql_insert=<img src='x' onerror='alert(1)'>; Evidence: <img src='x' onerror='alert(1)'> found in response
-----------------------------------
request answer:
<html><head>
        <title>SQL-Injection</title>
    </head>
    <body>
        <h1> SQL-Injection </h1>
        <p id="Welcometext">An SQL-Injection weakness is present on this site</p>
        
        <form>
            <label for="sql_insert">SQL data input:
                <input id="sql_insert" name="sql_insert">
            </label>
            <button type="submit" name="submit_insert" value="0">submit</button> <br>
            <label for="out_table_cont">Table content:
                <output id="out_table_cont">[(1, "'"), (2, "' or 1=1#'"), (3, '" or 1=1#"'), (4, "' or 1=1--'"), (5, '" or 1=1--"'), (6, 'echo kasodjfka'), (7, '1'), (8, '/etc/passwd'), (9, 'C:\\windows\\win.ini'), (10, 'index.html'), (11, "<img src="x" onerror="alert(1)">"), (12, '<script> alert(1) </script>'), (13, "'"), (14, "' or 1=1#'"), (15, '" or 1=1#"'), (16, "' or 1=1--'"), (17, '" or 1=1--"'), (18, 'echo kasodjfka'), (19, '1'), (20, '/etc/passwd'), (21, 'C:\\windows\\win.ini'), (22, 'index.html'), (23, "<img src="x" onerror="alert(1)">"), (24, '<script> alert(1) </script>'), (25, "'; set @test = 'ksdjkfl'; select @test; #"), (26, "'+or+1%3D1%23'"), (27, '"+or+1%3D1%23"'), (28, "'+or+1%3D1--'"), (29, '"+or+1%3D1--"'), (30, 'echo kasodjfka'), (31, '1;echo testtesttest;'), (32, '/etc/passwd'), (33, 'C:\\windows\\win.ini'), (34, 'index.html'), (35, "<img src="x" onerror="alert(1)">"), (36, '<script> alert(1) </script>'), (37, "'; set @test = 'ksdjkfl'; select @test; #"), (38, "'+or+1%3D1%23'"), (39, '"+or+1%3D1%23"'), (40, "'+or+1%3D1--'"), (41, '"+or+1%3D1--"'), (42, 'echo kasodjfka'), (43, '1;echo testtesttest;'), (44, '/etc/passwd'), (45, 'C:\\windows\\win.ini'), (46, 'index.html'), (47, "<img src="x" onerror="alert(1)">"), (48, '<script> alert(1) </script>'), (49, "'; set @test = 'ksdjkfl'; select @test; #"), (50, "'+or+1%3D1%23'"), (51, '"+or+1%3D1%23"'), (52, "'+or+1%3D1--'"), (53, '"+or+1%3D1--"'), (54, 'echo kasodjfka'), (55, '1;echo testtesttest;'), (56, '/etc/passwd'), (57, 'C:\\windows\\win.ini'), (58, 'index.html'), (59, "<img src="x" onerror="alert(1)">"), (60, '<script> alert(1) </script>'), (61, "'; set @test = 'ksdjkfl'; select @test; #"), (62, "'+or+1%3D1%23'"), (63, '"+or+1%3D1%23"'), (64, "'+or+1%3D1--'"), (65, '"+or+1%3D1--"'), (66, 'echo kasodjfka'), (67, '1;echo testtesttest;'), (68, '/etc/passwd'), (69, 'C:\\windows\\win.ini'), (70, 'index.html'), (71, "<img src="x" onerror="alert(1)">")]</output>
            </label>
        </form>
        
        <form>
        <!-- Exploit input: '; drop table htmlInput; select * from htmlInput where input = ' -->
            <label for="sql">SQL where query input:
                <input id="sql" name="sql">
            </label>
            <button type="submit" name="submit_where" value="0">submit</button> <br>
            <label for="out">Result:
                <output id="out">.</output>
            </label>
        </form>
        
        <p id="Links">
            <a href="http://localhost:8000/index.html">This link leads to the homepage</a><br>
            <a href="http://localhost:8000/xss.html">Here you can try XSS-attacks</a><br>
        </p>
    
</body></html>
-----------------------------------------------------------------------------
Possible XSS (Permanent): http://127.0.0.1:8000/sqlinjection.html?sql_insert=<script> alert(1) </script>; Evidence: <script> alert(1) </script> found in response
-----------------------------------
request answer:
<html><head>
        <title>SQL-Injection</title>
    </head>
    <body>
        <h1> SQL-Injection </h1>
        <p id="Welcometext">An SQL-Injection weakness is present on this site</p>
        
        <form>
            <label for="sql_insert">SQL data input:
                <input id="sql_insert" name="sql_insert">
            </label>
            <button type="submit" name="submit_insert" value="0">submit</button> <br>
            <label for="out_table_cont">Table content:
                <output id="out_table_cont">[(1, "'"), (2, "' or 1=1#'"), (3, '" or 1=1#"'), (4, "' or 1=1--'"), (5, '" or 1=1--"'), (6, 'echo kasodjfka'), (7, '1'), (8, '/etc/passwd'), (9, 'C:\\windows\\win.ini'), (10, 'index.html'), (11, "<img src="x" onerror="alert(1)">"), (12, '<script> alert(1) </script>'), (13, "'"), (14, "' or 1=1#'"), (15, '" or 1=1#"'), (16, "' or 1=1--'"), (17, '" or 1=1--"'), (18, 'echo kasodjfka'), (19, '1'), (20, '/etc/passwd'), (21, 'C:\\windows\\win.ini'), (22, 'index.html'), (23, "<img src="x" onerror="alert(1)">"), (24, '<script> alert(1) </script>'), (25, "'; set @test = 'ksdjkfl'; select @test; #"), (26, "'+or+1%3D1%23'"), (27, '"+or+1%3D1%23"'), (28, "'+or+1%3D1--'"), (29, '"+or+1%3D1--"'), (30, 'echo kasodjfka'), (31, '1;echo testtesttest;'), (32, '/etc/passwd'), (33, 'C:\\windows\\win.ini'), (34, 'index.html'), (35, "<img src="x" onerror="alert(1)">"), (36, '<script> alert(1) </script>'), (37, "'; set @test = 'ksdjkfl'; select @test; #"), (38, "'+or+1%3D1%23'"), (39, '"+or+1%3D1%23"'), (40, "'+or+1%3D1--'"), (41, '"+or+1%3D1--"'), (42, 'echo kasodjfka'), (43, '1;echo testtesttest;'), (44, '/etc/passwd'), (45, 'C:\\windows\\win.ini'), (46, 'index.html'), (47, "<img src="x" onerror="alert(1)">"), (48, '<script> alert(1) </script>'), (49, "'; set @test = 'ksdjkfl'; select @test; #"), (50, "'+or+1%3D1%23'"), (51, '"+or+1%3D1%23"'), (52, "'+or+1%3D1--'"), (53, '"+or+1%3D1--"'), (54, 'echo kasodjfka'), (55, '1;echo testtesttest;'), (56, '/etc/passwd'), (57, 'C:\\windows\\win.ini'), (58, 'index.html'), (59, "<img src="x" onerror="alert(1)">"), (60, '<script> alert(1) </script>'), (61, "'; set @test = 'ksdjkfl'; select @test; #"), (62, "'+or+1%3D1%23'"), (63, '"+or+1%3D1%23"'), (64, "'+or+1%3D1--'"), (65, '"+or+1%3D1--"'), (66, 'echo kasodjfka'), (67, '1;echo testtesttest;'), (68, '/etc/passwd'), (69, 'C:\\windows\\win.ini'), (70, 'index.html'), (71, "<img src="x" onerror="alert(1)">"), (72, '<script> alert(1) </script>')]</output>
            </label>
        </form>
        
        <form>
        <!-- Exploit input: '; drop table htmlInput; select * from htmlInput where input = ' -->
            <label for="sql">SQL where query input:
                <input id="sql" name="sql">
            </label>
            <button type="submit" name="submit_where" value="0">submit</button> <br>
            <label for="out">Result:
                <output id="out">.</output>
            </label>
        </form>
        
        <p id="Links">
            <a href="http://localhost:8000/index.html">This link leads to the homepage</a><br>
            <a href="http://localhost:8000/xss.html">Here you can try XSS-attacks</a><br>
        </p>
    
</body></html>
-----------------------------------------------------------------------------
Possible XSS (Permanent): http://127.0.0.1:8000/sqlinjection.html?sql=<script> alert(1) </script>; Evidence: <script> alert(1) </script> found in response
-----------------------------------
request answer:
<html><head>
        <title>SQL-Injection</title>
    </head>
    <body>
        <h1> SQL-Injection </h1>
        <p id="Welcometext">An SQL-Injection weakness is present on this site</p>
        
        <form>
            <label for="sql_insert">SQL data input:
                <input id="sql_insert" name="sql_insert">
            </label>
            <button type="submit" name="submit_insert" value="0">submit</button> <br>
            <label for="out_table_cont">Table content:
                <output id="out_table_cont">.</output>
            </label>
        </form>
        
        <form>
        <!-- Exploit input: '; drop table htmlInput; select * from htmlInput where input = ' -->
            <label for="sql">SQL where query input:
                <input id="sql" name="sql">
            </label>
            <button type="submit" name="submit_where" value="0">submit</button> <br>
            <label for="out">Result:
                <output id="out">[(12, '<script> alert(1) </script>'), (24, '<script> alert(1) </script>'), (36, '<script> alert(1) </script>'), (48, '<script> alert(1) </script>'), (60, '<script> alert(1) </script>'), (72, '<script> alert(1) </script>')]</output>
            </label>
        </form>
        
        <p id="Links">
            <a href="http://localhost:8000/index.html">This link leads to the homepage</a><br>
            <a href="http://localhost:8000/xss.html">Here you can try XSS-attacks</a><br>
        </p>
    
</body></html>
-----------------------------------------------------------------------------
